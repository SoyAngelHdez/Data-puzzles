# -*- coding: utf-8 -*-
"""Data-Puzzles - Team Time

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-oikE3WLLW9Kev4cfoUyyVbNCM361uF2

# Intro

A few friends and I are playing a game at 6pm. I know they often arrive late, and I really don't want to be late.

I actually looked at historical data, and found out my friends arrival time can be described as random variable that follows a normal distribution of parameter mean = 'appointment time' amd std_dev = 10 min.

I need to set the appointment so that Im at least 99% confident all my friends will be there by 6pm. Can you figure out the latest appointment time that would check that criteria? Thanks!!
"""

import matplotlib.pyplot as plt
import numpy as np

game_time = 18 * 60 # 6pm in number of minutes from midnight
n_friends = 4
std_dev_arrival_time_min = 10
# ... and that's all!
# right_appointment_time = ?

def simulate_friends(reunion_time, friends, std_dev_arrival):
  return float(max(np.random.normal(reunion_time,std_dev_arrival,friends)))

def get_answer (friends, std_dev_arrival, simulations, game_time):
  confidence = 0
  reunion_time = game_time
  while confidence < 99:
    arrived_late = 0
    for _ in range(simulations):
      if simulate_friends(reunion_time,friends,std_dev_arrival) > game_time:
        arrived_late += 1
    confidence = ((arrived_late /simulations)-1)*(-100)
    print(f'if reunion is set at {reunion_time//60}:{reunion_time%60}, you have {"%.2f" %confidence}% chance of arriving on time')
    reunion_time -= 1
  return reunion_time

print(get_answer(n_friends,std_dev_arrival_time_min,100000,game_time))

